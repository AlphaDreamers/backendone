
services:
  auth-service:
    build:
      context: ./serviceOne(auth)
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8004:8004"
    depends_on:

      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NATS_URL=nats://dummy:dummy@nats:4222
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=auth
      - REDIS_ADDR=redis:6379
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./serviceOne(auth)/config.yaml:/app/config.yaml

  nats:
    image: nats:latest
    container_name: auth-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: [
      "--user=dummy",
      "--pass=dummy",
    ]
    volumes:
      - nats-data:/data
    healthcheck:
      test: ["CMD", "nats", "pub", "--user", "dummy", "--password", "dummy", "healthcheck", "test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
      LANG: en_US.utf8
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: auth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  nats-data:
  postgres-data:
  redis-data:

networks:
  app-network:
    driver: bridge